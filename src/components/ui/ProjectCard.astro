---
export interface Props {
  title: string;
  description: string;
  category: string;
  status: 'active' | 'completed' | 'in-progress';
  technologies: string[];
  images: string[];
  results?: string;
  slug: string;
}

const { title, description, category, status, technologies, images, results, slug } = Astro.props;

const statusColors = {
  'active': 'bg-green-500/20 text-green-300 border-green-500/30 dark:bg-green-500/20 dark:text-green-300 dark:border-green-500/30 light:bg-green-100 light:text-green-800 light:border-green-200',
  'completed': 'bg-blue-500/20 text-blue-300 border-blue-500/30 dark:bg-blue-500/20 dark:text-blue-300 dark:border-blue-500/30 light:bg-blue-100 light:text-blue-800 light:border-blue-200',
  'in-progress': 'bg-yellow-500/20 text-yellow-300 border-yellow-500/30 dark:bg-yellow-500/20 dark:text-yellow-300 dark:border-yellow-500/30 light:bg-yellow-100 light:text-yellow-800 light:border-yellow-200'
};

const statusLabels = {
  'active': 'Active',
  'completed': 'Completed', 
  'in-progress': 'In Progress'
};

const categoryColors = {
  'Oncology': 'bg-red-500/20 text-red-300 dark:bg-red-500/20 dark:text-red-300 light:bg-red-100 light:text-red-800',
  'Radiology': 'bg-blue-500/20 text-blue-300 dark:bg-blue-500/20 dark:text-blue-300 light:bg-blue-100 light:text-blue-800',
  'Pathology': 'bg-purple-500/20 text-purple-300 dark:bg-purple-500/20 dark:text-purple-300 light:bg-purple-100 light:text-purple-800',
  'Cardiology': 'bg-pink-500/20 text-pink-300 dark:bg-pink-500/20 dark:text-pink-300 light:bg-pink-100 light:text-pink-800',
  'Neurology': 'bg-indigo-500/20 text-indigo-300 dark:bg-indigo-500/20 dark:text-indigo-300 light:bg-indigo-100 light:text-indigo-800',
  'General': 'bg-gray-500/20 text-gray-300 dark:bg-gray-500/20 dark:text-gray-300 light:bg-gray-100 light:text-gray-800'
};
---

<div class="group bg-white/5 dark:bg-white/5 light:bg-white rounded-3xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 border border-white/10 dark:border-white/10 light:border-gray-100 backdrop-blur-sm">
  <div class="aspect-video overflow-hidden relative">
    <img 
      src={images[0]} 
      alt={title}
      class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-110"
      loading="lazy"
    />
    <div class="absolute inset-0 bg-gradient-to-t from-black/40 to-transparent opacity-60 group-hover:opacity-80 transition-opacity duration-300"></div>
  </div>
  
  <div class="p-8">
    <div class="flex items-start justify-between mb-4">
      <span class={`px-3 py-1 rounded-full text-sm font-semibold backdrop-blur-sm border ${categoryColors[category] || categoryColors['General']}`}>
        {category}
      </span>
      <span class={`px-3 py-1 rounded-full text-sm font-medium border backdrop-blur-sm ${statusColors[status]}`}>
        {statusLabels[status]}
      </span>
    </div>
    
    <h3 class="text-2xl font-bold text-white dark:text-white light:text-gray-900 mb-3 group-hover:text-blue-400 dark:group-hover:text-blue-400 light:group-hover:text-blue-600 transition-colors duration-300">{title}</h3>
    <p class="text-gray-300 dark:text-gray-300 light:text-gray-600 mb-6 leading-relaxed line-clamp-3">{description}</p>
    
    {results && (
      <div class="mb-6 p-4 bg-green-500/10 dark:bg-green-500/10 light:bg-gradient-to-r light:from-green-50 light:to-blue-50 rounded-xl border border-green-500/20 dark:border-green-500/20 light:border-green-100 backdrop-blur-sm">
        <div class="flex items-start space-x-2">
          <svg class="w-5 h-5 text-green-400 dark:text-green-400 light:text-green-600 mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
          <div>
            <p class="text-green-300 dark:text-green-300 light:text-green-800 text-sm font-semibold mb-1">Key Results:</p>
            <p class="text-green-400 dark:text-green-400 light:text-green-700 text-sm">{results}</p>
          </div>
        </div>
      </div>
    )}
    
    <!-- Technologies -->
    <div class="mb-6">
      <div class="flex flex-wrap gap-2">
        {technologies.slice(0, 4).map((tech) => (
          <span class="bg-white/10 dark:bg-white/10 light:bg-gray-100 text-gray-300 dark:text-gray-300 light:text-gray-700 px-3 py-1 rounded-lg text-xs font-medium hover:bg-white/20 dark:hover:bg-white/20 light:hover:bg-gray-200 transition-colors duration-200 backdrop-blur-sm border border-white/20 dark:border-white/20 light:border-gray-200">
            {tech}
          </span>
        ))}
        {technologies.length > 4 && (
          <span class="text-gray-400 dark:text-gray-400 light:text-gray-500 text-xs px-3 py-1 font-medium">
            +{technologies.length - 4} more
          </span>
        )}
      </div>
    </div>
    
    <a 
      href={`/projects/${slug}`}
      class="inline-flex items-center text-blue-400 dark:text-blue-400 light:text-blue-600 hover:text-blue-300 dark:hover:text-blue-300 light:hover:text-blue-700 font-semibold transition-all duration-300 group-hover:translate-x-1"
    >
      Learn More
      <svg class="w-4 h-4 ml-2 transition-transform duration-300 group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
      </svg>
    </a>
  </div>
</div>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>